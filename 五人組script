document.addEventListener('DOMContentLoaded', () => {
  const saveRulesBtn = document.getElementById('saveRulesBtn');
  const rulesForm = document.getElementById('rulesForm');
  const selectedRulesList = document.getElementById('selectedRulesList');

  // 初期化処理
  loadSavedRules();

  // 保存ボタン押下時
  saveRulesBtn.addEventListener('click', () => {
    const selectedRules = getSelectedRules();
    saveRules(selectedRules);
    renderSelectedRules(selectedRules);
    alert('ルールを保存しました！');
  });

  // チェックされているルールを取得
  function getSelectedRules() {
    return Array.from(rulesForm.querySelectorAll('input[name="rule"]:checked'))
      .map(input => input.value);
  }

  // ローカルストレージに保存
  function saveRules(rules) {
    try {
      localStorage.setItem('selectedRules', JSON.stringify(rules));
    } catch (e) {
      console.error('保存失敗:', e);
    }
  }

  // 保存済みルールを読み込む
  function loadSavedRules() {
    try {
      const saved = localStorage.getItem('selectedRules');
      if (saved) {
        const rules = JSON.parse(saved);
        checkSavedRules(rules);
        renderSelectedRules(rules);
      }
    } catch (e) {
      console.error('読み込み失敗:', e);
    }
  }

  // チェック状態の初期化
  function checkSavedRules(rules) {
    rulesForm.querySelectorAll('input[name="rule"]').forEach(input => {
      input.checked = rules.includes(input.value);
    });
  }

  // 表示を更新 + 削除ボタン追加
  function renderSelectedRules(rules) {
    selectedRulesList.innerHTML = '';
    rules.forEach((rule, index) => {
      const li = document.createElement('li');
      li.textContent = rule;

      const deleteBtn = document.createElement('button');
      deleteBtn.textContent = '削除';
      deleteBtn.className = 'delete-rule-btn';
      deleteBtn.style.marginLeft = '10px';
      deleteBtn.onclick = () => {
        rules.splice(index, 1);
        saveRules(rules);
        checkSavedRules(rules);
        renderSelectedRules(rules);
      };

      li.appendChild(deleteBtn);
      selectedRulesList.appendChild(li);
    });
  }
});


